/* 
	Dump 3 Project
	Weapon: GOH-12 (Get Over Here! 12 gauge)
	Author: Snarboo
*/

actor goh12TractorBeam : LoreShot
/*
	A hacky implementation of a tractor beam using the Lore Shot.
*/
{
	Radius 13
	Height 8
	Scale 0.25
	Speed 64 
	Damage (1) // Must do damage in order to "reel in" enemies!
	ReactionTime 2 // Flies ~128 units before petering out.
	RenderStyle Add
	Alpha 0.75
	Projectile
	SeeSound ""
	ActiveSound ""
	DeathSound ""
	Obituary "%o was hooked by %k's tractor beam."
	+PAINLESS // A bit overpowered if it causes pain.
	+RANDOMIZE
	-STRIFEDAMAGE
	States
	{
	Spawn:
		TBEM ABC 2 Bright
		TBEM D 2 Bright A_Countdown
		TBEM D 0 Bright A_Countdown
			// Bit odd, but otherwise it's too short
		Loop
	Death:
		TBEM E 1 Bright
		Stop
	}
}
actor goh12Sequence : Inventory
/*
	This actor keeps track of which barrel has been fired
*/
{
	Inventory.MaxAmount 1
	-INVBAR
}

actor goh12 : Weapon
/*
	Description:
	The GOH-12 is a bog standard 12 gauge with a difference: it has a tractor
	beam!
	
	Weapon Class: Super Shotgun
	
	Primary fire: Semiauto shotgun blast
		-Primary Ammo: Shells
	Secondary: Tap to fire both barrels
		-Secondary Ammo: Shells
	Tertiary: Hold alt fire for tractor beam, then release for both barrels!
		-Tertiary Ammo: Cells
*/
{
	Weapon.AmmoUse 1
	Weapon.AmmoUse2 1
	Weapon.AmmoGive 10
	Weapon.AmmoGive2 20
	Weapon.AmmoType "Shell"
	Weapon.AmmoType2 "Cell"
	Weapon.SlotNumber 3
	Inventory.PickupMessage "You got the GOH-12!"
	Tag "GOH-12"
	Decal "BULLETCHIP"
	Obituary "%o was turned to swiss cheese by %k's GOH-12."
	// The following flag is necessary for the weapon to behave properly
	// There are still some kinks given the way the weapon works
	+WEAPON.AMMO_CHECKBOTH
	States
	{
	Select:
		GOHR AAAAAA 0 A_Raise
		GOHR A 1 A_Raise 
		Loop
	Deselect:
		GOHR G 0 A_StopSound (CHAN_WEAPON)
			// This stops any stray sounds that may have made it thru
		GOHR GFEDCBA 1
		GOHR A 0 A_TakeInventory ("goh12Sequence", 0)
			// The barrels are reset when the weapon is lowered
	Deselect2:
		GOHR AAAAAAA 0 A_Lower
		GOHR A 1 A_Lower
		Loop
	Ready:	
		GOHR ABCDEFG 1
		Goto Ready2
	Ready2:
		GOHG A 1 A_WeaponReady
		Loop
	Fire:
		GOLF A 0 A_JumpIfInventory ("Shell", 1, "FireSingle")
			// Does the player have enough shells? If so, fire single barrel
		Goto Ready2 // Else go to idle state
	FireSingle:
		GOLF A 0 A_JumpIfInventory ("goh12Sequence", 1, "FireRight")
			// This keeps track of which barrel has been fired 
		GOLF A 0 A_PlaySound ("weapon/gohfire", CHAN_WEAPON)
		GOLF A 0 A_TakeInventory ("Shell", 1)
		GOLF A 0 Bright A_GunFlash ("Flash")
		GOLF A 1 Bright A_FireBullets (5, 2, 9, 4, "BulletPuff", 0)
		GOLF A 2 Bright A_Quake (1, 5, 0, 1, 0)
			// A_Quake is handy for users that don't use mouse look!
		GOLF B 4
		GOLF C 3
		GOLF DEF 1
		GOHG A 2 A_GiveInventory ("goh12Sequence", 1)
		GOHG A 0 A_Refire
		Goto Ready2
	FireRight:
		GORF A 0 A_PlaySound ("weapon/gohfire", CHAN_WEAPON)
		GORF A 0 A_TakeInventory ("Shell", 1)
		GORF A 0 Bright A_GunFlash ("Flash")
		GORF A 1 Bright A_FireBullets (5, 2, 9, 4, "BulletPuff", 0)
		GORF A 2 Bright A_Quake (1, 5, 0, 1, 0)
		GORF B 4
		GORF C 3
		GORF DEF 1
		GOHG A 2 A_TakeInventory ("goh12Sequence", 0)
		GOHG A 0 A_Refire
		Goto Ready2
	AltFire:
		GOHG A 4 
			// Is the player holding the fire button? If so, fire tractor beam
		GOHG A 0 A_Refire 
			// Else drop through and fire both barrels
	CheckFireBoth:
		GOHG A 0 A_StopSound (CHAN_WEAPON)
			// This keeps the tractor beam sound from looping forever
		GOHG A 0 A_JumpIfInventory ("Shell", 2, "FireBoth")
			// Are there enough shells? If so, fire both barrels
		Goto Fire // Else fire single barrel
	FireBoth:
		GOBF A 0 A_PlaySound ("weapon/gohfire2", CHAN_WEAPON)
		GOBF A 0 A_TakeInventory ("Shell", 2)
		GOBF A 0 Bright A_GunFlash ("Flash2")
		GOBF A 1 Bright A_FireBullets (6, 3, 18, 4, "BulletPuff", 0)
		GOBF A 2 Bright A_Quake (2, 5, 0, 1, 0)
		GOBF B 4 
		GOBF C 4
		GOBF DEFGH 1
		GOHG A 20
		GOHG A 5 A_Refire ("AltHold")
		Goto Ready2
	AltHold:
		GOTB A 0 A_JumpIfInventory ("Cell", 1, "TractorBeam") 
			// Does the player have enough cells? If so, fire tractor beam
		Goto CheckFireBoth
	TractorBeam:
		GOTB A 0 A_JumpIfNoAmmo ("AltFire")
		GOTB A 0 A_PlaySound ("weapon/gohtb", CHAN_WEAPON, 1.0, 1)
			// A looping beam sound
		GOTB A 1 A_FireCustomMissile ("goh12TractorBeam", 0, 1)
		GOTB B 1 A_FireCustomMissile ("goh12TractorBeam", 0, 0)
		GOTB C 1 A_FireCustomMissile ("goh12TractorBeam", 0, 0)
		GOTB D 1 A_FireCustomMissile ("goh12TractorBeam", 0, 0)
		GOTB D 0 A_Refire
		Goto CheckFireBoth
	Flash:
		TNT1 A 1 A_Light (1)
		TNT1 A 2 A_Light (2)
		TNT1 A 1 A_Light (1)
		TNT1 A 0 A_Light (0)
		Stop
	Flash2:
		TNT1 A 1 A_Light (2)
		TNT1 A 2 A_Light (3)
		TNT1 A 1 A_Light (1)
		TNT1 A 0 A_Light (0)
		Stop
	Spawn:
		GOHP A -1
		Stop
	}
}